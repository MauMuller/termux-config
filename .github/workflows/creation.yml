name: Create a release
run-name: creation of release
on:
  workflow_dispatch:
    inputs:
      start-tag:
        description: 'Type START tag to show commits:'
        type: string
        required: false
      end-tag:
        description: 'Type END tag to show commits:'
        type: string
        required: true
jobs:
  get-start-range-tag:
    runs-on: ubuntu-latest
    outputs:
      START_TAG: "${{ steps.get-tag.outputs.START_TAG }}"
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Get repo access
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          
      - id: get-tag
        name: Get inputed start tag
        run: |
          START_TAG="${{ inputs.start-tag }}"
          
          if [ ! "$START_TAG" ]
            then            
              LATEST_RELEASE_TAG="$(gh release list -O desc --json tagName --jq ".[].tagName" -L 1)"
              START_TAG="$(git tag --sort version:refname | grep -A 1 "$(echo "$LATEST_RELEASE_TAG")" | tail -n 1)"
          fi
          
          if [ ! "$START_TAG" ]
            then exit 1
          fi
          
          echo "START_TAG=$START_TAG" >> "$GITHUB_OUTPUT"

  create-release:
    runs-on: ubuntu-latest
    needs: [get-start-range-tag]
    env:
      START_TAG: ${{ needs.get-start-range-tag.outputs.START_TAG }}
      END_TAG: ${{ inputs.end-tag }}
      TEMP_PATH: ".github/temp/"
      TEMP_FILE: "release.md"
    steps:
      - id: get-template 
        name: Get template
        run: |
          TEMPLATE="@{refactor}=- %s\n"
          echo "TEMPLATE=$TEMPLATE" >> "$GITHUB_OUTPUT"

      - name: Get repo access
        uses: actions/checkout@v4
          fetch-depth: 0
          fetch-tags: true

      - name: Create temporary release
        env: 
          TEMPLATE: ${{ steps.get-template.outputs.TEMPLATE }}
        run: |
          ls
          RELEASE_BODY="$(echo $TEMPLATE | sed -E "s/@\{(.+)\}\=(.+)/git log --format='\\2' $START_TAG...$END_TAG | grep -Pi '\\1'/gie")"
          echo $RELEASE_BODY

  show-found-tags:
    runs-on: ubuntu-latest
    needs: [get-start-range-tag]
    env:
      START_TAG: ${{ needs.get-start-range-tag.outputs.START_TAG }}
    steps:
      - name: Show variables
        run: |
          ls
          echo $START_TAG
          echo ${{ inputs.end-tag }}
