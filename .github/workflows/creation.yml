name: Create a release
run-name: creation of release
on:
  workflow_dispatch:
    inputs:
      start-tag:
        description: 'Type START tag to show commits:'
        type: string
        required: false
      end-tag:
        description: 'Type END tag to show commits:'
        type: string
        required: true
jobs:
  get-tags:
    runs-on: ubuntu-latest
    outputs:
      START_TAG: "${{ steps.get-start-tag.outputs.START_TAG }}"
      END_TAG: "${{ steps.get-end-tag.outputs.END_TAG }}"
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Get repo access
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          
      - id: get-end-tag
        name: Get typed END tag
        run: |
          END_TAG="${{ inputs.end-tag }}"

          if [ ! "$(git tag | grep -Eio "^$END_TAG$")" ]
            then 
              echo -e "\nTag typed ($END_TAG) wasnt find at project tag's list.\n"
              exit 1
          fi

          echo "END_TAG=$END_TAG" >> "$GITHUB_OUTPUT"

      - id: get-start-tag
        name: Get typed START tag
        run: |
          START_TAG="${{ inputs.start-tag }}"
          
          if [ ! "$START_TAG" ]
            then            
              LATEST_RELEASE_TAG="$(gh release list -O desc --json tagName --jq ".[].tagName" -L 1)"
              START_TAG="$(git tag --sort version:refname | grep -A 1 "$(echo "$LATEST_RELEASE_TAG")" | tail -n 1)"
          fi
          
          if [ ! "$(git tag | grep -Eio "^$START_TAG$")" ]
            then 
              echo -e "\nTag typed ($START_TAG) wasnt find at project tag's list.\n"
              exit 1
          fi
          
          echo "START_TAG=$START_TAG" >> "$GITHUB_OUTPUT"

  create-release:
    runs-on: ubuntu-latest
    needs: [get-tags]
    env:
      START_TAG: ${{ needs.get-tags.outputs.START_TAG }}
      END_TAG: ${{ needs.get-tags.outputs.END_TAG }}
      TEMP_PATH: ".github/temp"
      TEMP_FILE: "release.md"
    steps:
      - id: get-template 
        name: Get template
        run: |
          TEMPLATE="@{refactor}=- %s\n"
          echo "TEMPLATE=$TEMPLATE" >> "$GITHUB_OUTPUT"

      - name: Get repo access
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Create temporary makdown file
        env: 
          TEMPLATE: ${{ steps.get-template.outputs.TEMPLATE }}
        run: |
          RELEASE_BODY="$(echo $TEMPLATE | sed -E "s/@\{(.+)\}\=(.+)/git log --format='\\2' $START_TAG...$END_TAG | grep -Pi '\\1'/gie")"
          echo "$RELEASE_BODY" > "$TEMP_PATH/$TEMP_FILE"

      - name: Create release
        run: gh relase create $END_TAG -F "$TEMP_PATH/$TEMP_FILE"
